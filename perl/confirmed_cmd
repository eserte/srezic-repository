=head2 confirmed_cmd($code, $label)

=for category System

Wait for user confirmation, then execute the given code reference. The
source code of the code reference is presented to the user, unless the
option $label is given.

Recommendation: also use

    use autodie qw(:default :system);

=cut

sub confirmed_cmd (&;$) {
    my($code, $label) = @_;
    require B::Deparse;
    if (!defined $label) {
	my $pad_defs = "# cannot get lexicals, no PadWalker installed\n";
	if (eval { require PadWalker; require Data::Dumper; 1 }) {
	    my $list = PadWalker::closed_over($code);
	    my @pad_defs;
	    while(my($k,$v) = each %$list) {
		my $do_deref = ref($v) =~ m{^(SCALAR|REF)$};
		my $deref = $do_deref ? $$v : $v;
		my $dump = Data::Dumper->new([$deref],[ (!$do_deref ? '*' : '') . 'a'])->Indent(1)->Useqq(1)->Dump;
		$dump =~ s{^.a\s*=\s*}{};
		my @dump = split /\n/, $dump;
		s{^}{    } for @dump[1..$#dump];
		push @pad_defs, "$k = " . join("\n", @dump);
	    }
	    $pad_defs = @pad_defs ? "\n" . join("", map { "    $_" } @pad_defs) : '';
	    $pad_defs =~ s{\n$}{};
	}
	$label = B::Deparse->new->coderef2text($code);
	$label =~ s{^\s*use strict 'refs';\s*\n}{}m;
	$label =~ s<^{><{$pad_defs>;
    }
    print STDERR "CALL $label ";
    <STDIN>;
    $code->();
}
