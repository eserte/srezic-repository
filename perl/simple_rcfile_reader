=head2 simple_rcfile_reader($file[, quiet => $bool])

=for category Config

Read a config file which simply consists of commandline-like options,
and append them to C<@ARGV> for later use in a L<Getopt::Long> or
similar call.

Lines in the rc file starting with # are treated as comments and
ignored.

The parsing is done with L<Text::ParseWords/shellwords>, so quotes are
handled like in a shell.

If the special option C<--skiprcfile> is found in C<@ARGV>, then
loading of the rc file is suppressed.

Don't emit any debug messages if C<< quiet => 1 >> is set.

=cut

# Taken from cpan_smoke_modules
sub simple_rcfile_reader ($;@) {
    my($rc_file, %opts) = @_;
    my $quiet = delete $opts{quiet};
    die "Unhandled options: " . join(" ", %opts) if %opts;

    if (-r $rc_file) {
	# Quick'n'dirty check if the rc file should be skipped
	if (grep { m{^--?skiprcfile$} } @ARGV) {
	    @ARGV = grep { !m{^--?skiprcfile$} } @ARGV;
	} else {
	    require Text::ParseWords;
	    print STDERR "INFO: Reading extra options from $rc_file... "
		unless $quiet;
	    open my $rcfh, $rc_file
		or die "$rc_file exists and is readable, but cannot be opened?! Error: $!";
	    my @file_ARGV;
	    while(<$rcfh>) {
		chomp;
		next if /^\s*#/;
		next if /^\s*$/;
		push @file_ARGV, Text::ParseWords::shellwords($_);
	    }
	    print STDERR "extra options: " . (@file_ARGV ? "@file_ARGV" : '<none>') . "\n"
		unless $quiet;
	    unshift @ARGV, @file_ARGV;
	}
    }
}
